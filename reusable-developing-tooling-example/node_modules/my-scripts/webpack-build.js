let path = require('path')

let HtmlPlugin = require('html-webpack-plugin')
let webpack = require('webpack')

let compiler = webpack({
  devtool: 'source-map',
  entry: {
    app: path.resolve('src/index.js'),
  },
  output: {
    filename: '[name].js',
    path: path.resolve('dist/'),
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        loader: require.resolve('babel-loader'),
        options: {
          presets: [
            require.resolve('babel-preset-env'),
            require.resolve('babel-preset-react'),
          ]
        },
        exclude: /node_modules/,
      }
    ]
  },
  plugins: [
    // Allow development-only code to be eliminated
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify('production'),
    }),
    // Generate an index.html which includes generated scripts
    new HtmlPlugin({
      template: require.resolve('./template.html')
    }),
    // Minify and perform dead code elimination
    new webpack.optimize.UglifyJsPlugin({
      compress: {
        warnings: false,
      },
      output: {
        comments: false,
      },
      sourceMap: true,
    }),
  ],
})

compiler.run((err, stats) => {
  if (err) {
    console.error(err.stack || err)
    if (err.details) {
      console.error(err.details)
    }
    return
  }

  console.log(stats.toString({
    children: false,
    chunks: false,
    colors: true,
  }))
})
